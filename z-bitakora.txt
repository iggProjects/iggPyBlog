BITAKORA

STILL TO DO !

0.- authentication - login required

    - https://www.digitalocean.com/community/tutorials/how-to-add-authentication-to-your-app-with-flask-login
 
1.- fill all excercises info  ðŸ˜Žâœ”âœ”
    - test colab posts input process
    - EMAIL pythonanywhere console  ðŸ˜Žâœ”âœ”

4.- MyFunctions: 
    - ADD script zip_file_list(list, zipname)
    - alert window - copy from mySQLadmin
        function invoke_Alert_Window(my_msg) {
            document.getElementById('p-alert-msg').innerHTML = my_msg;
            document.getElementById("my-alert-window").style.display = "block";
        }
        function close_Alert_Window() {
            document.getElementById("my-alert-window").style.display = "none";
        }    

5.- modal for img
    - modal for img  vs image zoom by click
        - https://linuxhint.com/image-zoom-in-zoom-out-javascript/

8.- upload images
10.- open windows   
    - https://www.youtube.com/watch?v=R5N8TA0KFxc

postergados
2.- login and users: admin, colab

3.- crud for posts
    - forms: https://www.youtube.com/watch?v=Rxp3mkg2mRQ
    - Add A Blog Post Model and Form: https://www.youtube.com/watch?v=1RmU8lderG8
    - Edit blog post: https://www.youtube.com/watch?v=N4Nz0cYuCnc
    - Add A Rich Text Editor
        - https://www.youtube.com/watch?v=5jnAnnxZGQQ
            - pip install flask-ckeditor
            - https://flask-ckeditor.readthedocs.io/en/latest/

6.- menu bar when width like phone
7.- search in list-dict
9.- drag & drop

PROJECTS 
1.- life game
2.- simple version of enigma

DB FOR USERS (admin, colab), ARTICLES AND EXCERCISES
- mysql vs sqlite
- login  (z index effect)
    - https://www.geeksforgeeks.org/login-and-registration-project-using-flask-and-mysql/
    - https://github.com/j2logo/tutorial-flask/blob/master/app/admin/routes.py
    - https://realpython.com/introduction-to-flask-part-2-creating-a-login-page/


- init with home and create login flow to CRUD posts -- MySql

- script to update z_execution_file.bat (called from JS in excercise.html)
    - check how to write sub dirs  âœ”âœ”

- check option cmd vs .bat
    - create all .bat    

- zip files: create all zip files to download
    - download to specified dir ???
        - https://itnext.io/how-to-download-files-with-javascript-d5a69b749896    


- drag and drop zip files 
    - https://www.easydevguide.com/posts/drag_drop_upload
    - https://gist.github.com/peace098beat/db8ef7161508e6500ebe
    - https://www.youtube.com/watch?v=m-t5ZNHNa_Y
    - https://mindlesstechnology.wordpress.com/2008/03/29/make-python-scripts-droppable-in-windows/
    - https://stackoverflow.com/questions/142844/drag-and-drop-onto-python-script-in-windows-explorer

- https://stackoverflow.com/questions/52835681/how-can-i-run-a-python-script-from-within-flask

- ExecPythonScript() :  how to pass file parameter to .bat


- body in list... how to accept line jump in text
    - https://stackoverflow.com/questions/59718855/how-to-insert-a-new-line-every-entry-in-a-dictionary

*********************************************************************************************

DO IT !!!

- Finish passing variable information from JS to Python  âœ”âœ”
    - download option with correct py script    
    Variables from Flask to JS 
        - https://stackoverflow.com/questions/37259740/passing-variables-from-flask-to-javascript

    cÃ³mo pasar variables de python a JavaScript
        - https://www.youtube.com/watch?v=CJ3XiQgjNE8

    cÃ³mo pasar variables de python a JavaScript
        - https://www.codespeedy.com/how-to-pass-javascript-variables-to-python-in-flask/

- github - eu.pythonanywhere
    - https://www.youtube.com/watch?v=4sTZN15J33A
    - https://help.pythonanywhere.com/pages/UploadingAndDownloadingFiles/

- link with pythonanywhere  âœ”âœ”

- create file openCmdLine function to generate openCmdLine.py with file info    
    - on click, must read file name, and call "python z-openCmdLine.py filename" 
            ( import os, os.system('cls'), os.system('cmd /c ' + sys.argv[1]) )

- favicon, ...  -->  icons8 free page âœ”
- continue work in "About routes" âœ”
- excercises data, templates and style âœ”
- scroll bar style âœ”
- download zip âœ”

- EXCERCISE files ( os )  âœ”
    - VIEW FOR SCRIPTS to be UPLOAD_FOLDER
    - create and execute file.bat
        - https://stackoverflow.com/questions/13525129/python-how-can-i-execute-bat-file-in-new-cmd-window
        - https://datatofish.com/batch-file-from-python/
        - https://datatofish.com/batch-python-script/
        - https://discuss.python.org/t/how-to-run-batch-file-by-using-python-code/17128/2


- Open console with python statement  âœ”
    - https://datatofish.com/command-prompt-python/
        import os
        os.system('cmd /k "color a & date"')
        os.system('cmd /c "py ./20230227-OS-Dir-Files-Example_For_Teacher.py"')

- create zip with os âœ”
    - https://stackoverflow.com/questions/25544475/using-python-to-add-a-list-of-files-into-a-zip-file
    - https://stackoverflow.com/questions/27991745/zip-file-and-avoid-directory-structure
    - https://thispointer.com/python-how-to-create-a-zip-archive-from-multiple-files-or-directory/
    - https://realpython.com/python-zipfile/

- WA colors: https://usbrandcolors.com/whatsapp-colors/

- COLORS codes (oct, hexa) 
    - https://www.geeksforgeeks.org/print-colors-python-terminal/
    - http://jafrog.com/2013/11/23/colors-in-terminal.html
    - https://xdevs.com/guide/color_serial/
    - https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit
    - https://chrisyeh96.github.io/2020/03/28/terminal-colors.html
    - https://github.com/fidian/ansi
    - https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797
    - https://gist.github.com/RabaDabaDoba/145049536f815903c79944599c6f952a
    - https://www.ascii-code.com/html-color-names
    - printf("\033[%dm %3d\033[m", n, n);

- LJUST 
    ex: num2 = str(color_).ljust(3, ' ')

- COLORS in power shell  âœ”   (-->  os.system('cls') )
    - https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_ansi_terminals?view=powershell-7.3
    - https://stackoverflow.com/questions/53629115/colored-text-output-on-powershell
    - https://pypi.org/project/colorama/
    - https://devblogs.microsoft.com/scripting/hey-scripting-guy-weekend-scripter-using-windows-powershell-2-0-to-display-color-coded-output-in-a-table/


LINKS

--- https://stackoverflow.com/questions/52835681/how-can-i-run-a-python-script-from-within-flask

--- ExecPythonScript() :  how to pass file parameter to .bat

--- body in list... how to accept line jump in text
    - https://stackoverflow.com/questions/59718855/how-to-insert-a-new-line-every-entry-in-a-dictionary


- Python Shell Commands 
    - https://www.the-analytics.club/python-shell-commands

- Running python script on cmd(Windows) through java script
    - vhttps://stackoverflow.com/questions/52806389/running-python-script-on-cmdwindows-through-java-script
    - https://stackoverflow.com/questions/1880198/how-to-execute-shell-command-in-javascript

- JS calling python function    
    py-script
        - https://www.jhanley.com/blog/pyscript-javascript-callbacks/
        - https://docs.pyscript.net/latest/guides/passing-objects.html
        - https://stackoverflow.com/questions/72321468/how-do-i-call-a-python-script-when-clicking-a-button-using-pyscript

    - https://stackoverflow.com/questions/42601478/flask-calling-python-function-on-button-onclick-event  

        EXAMPLE EXECUTE PYTHON SCRIPT

        you can create a generic route to execute everything you want in python:

        APP
            @app.route('/<FUNCTION>')
            def command(FUNCTION=None):
                exec(FUNCTION.replace("<br>", "\n"))
                return ""

            def run_script():
                file = open(r'/path/to/your/file.py', 'r').read()
                return exec(file)

            def run_script():
                import os
                os.system('cls')
                os.system('cmd /c "z_testing_execution_file.bat"')
                return render_template('excersises.html',excercises = Excercises)
    
        JAVASCRIPT
            now you create a javascript function to access the python function:

            // pythonCommand can be any code in python
            function ExecPythonCommand(pythonCommand){
                var request = new XMLHttpRequest()
                request.open("GET", "/" + pythonCommand, true)
                request.send()
            }

        ONCLICK
            and finally call the javascript function in onclick and say what do you want execute in python script:

            <button type="button" onclick="ExecPythonCommand('move_forward()')">i'm a button</button>

simple posts blog 
    - https://dev.to/geektechpub/flask-blog-tutorial-1-getting-started-10cd

images --> https://www.youtube.com/watch?v=XTiM6HU0x9k
           https://gist.github.com/lakshyasri/5e59ca8a0c6e1eb413dfa1c6c88603dd

url_for
    - https://flask.palletsprojects.com/en/2.2.x/api/#flask.url_for      

MySql
    - https://www.geeksforgeeks.org/profile-application-using-python-flask-and-mysql/

Web
    - https://github.com/tutsplus/create-a-web-app-from-scratch-using-python-flask-and-mysql


=====================================================================================

IF statement
    {% if username == "": %}
    <!--if blk html code--> 
    {% else %}
    <!--else blk html code-->
    {% endif %}

    https://pythonexamples.org/python-flask-if-statement-in-html-template/  

    https://python-web.teclado.com/section07/lectures/06_jinja2_conditional_statements/          

PASS variables
    - https://pythonexamples.org/python-flask-pass-variable-from-python-to-html-template/

LOOP Statement
    <!DOCTYPE html> 
    <html> 
        <body> 
        <h1>Hello User!</h1>
        <ul> 
        {% for item in fruits: %} 
        <li>{{ item }}</li> 
        {% endfor %} 
        </ul>
        <p>Welcome to sample flask application by 
            <a href="https://pythonexamples.org/">PythonExamples.org</a>
        </p> 
        </body> 
    </html>
    https://pythonexamples.org/python-flask-for-loop-in-html-template/


ARGUMENTS - parameters
    from flask import Flask, render_template, request
    app = Flask(_name_) 
    @app.route("/") 
    def home_page(): 
        name = request.args['name'] 
        return render_template("index.html", name=name) 
    if _name_ == "_main_":
        app.run(host="127.0.0.1", port=8080, debug=True)

    ====================
    URLÂ http://127.0.0.1:8080/?name=Tony.

    https://pythonexamples.org/python-flask-access-url-query-parameters/


STATIC Files
    - Setting up static folder path in Flask
    - https://www.geeksforgeeks.org/how-to-serve-static-files-in-flask/
    - https://flask.palletsprojects.com/en/1.0.x/tutorial/static/


UPLOAD files

    from flask import Flask, render_template, request
    import os 

    app = Flask(_name_)
    app.config['UPLOAD_FOLDER'] = 'uploads' 

    @app.route("/") 
    def home_page(): 
        return render_template("index.html")
    @app.route('/upload-file', methods=['POST']) 
    def upload_file(): 
        if request.method == 'POST': 
            if 'file' not in request.files: return 'There is file is submitted form.' 
            file = request.files['file']
            file.save(os.path.join(app.config['UPLOAD_FOLDER'], file.filename)) 
            return 'File upload successful.' 
        else: 
            return 'Invalid request.' 

    if _name_ == "_main_":
        app.run(host="127.0.0.1", port=8080, debug=True)

    https://pythonexamples.org/python-flask-upload-file/    


    <!DOCTYPE html> 
    <html> 
        <body> 
            <h1>Upload File</h1>
            <p>Welcome to sample flask application by <a href="https://pythonexamples.org/">PythonExamples.org</a>.
            </p> 

            <div> 
                <h3>Upload</h3> 
                <form action = "/upload-file" method = "POST" enctype = "multipart/form-data">
                    <input type="file" name="file"> 
                    <input type="Submit" value="Upload"> 
                </form> 
                <div style="color:orange">{{ message }}</div> 
            </div> 
        </body> 
    </html>    

API simple example    
    - https://pythonexamples.org/python-flask-api-example/